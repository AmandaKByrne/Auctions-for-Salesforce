<!-- 
// Written by David Habib, copyright (c) 2012 Groundwire, 1402 3rd Avenue, Suite 1000, Seattle, WA 98101
// This program is released under the GNU Affero General Public License, Version 3. http://www.gnu.org/licenses/
 -->

<apex:page controller="AUC_CTRL_AuctionCheckOut"  title="Auction Check Out" tabStyle="Check_Out__tab" >

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js" type="text/javascript"></script>
<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/redmond/jquery-ui.css" type="text/css" />
	
<style>	
	
	/* this styling adds the vertical scrollbar to our autocomplete fields */
	.ui-autocomplete-input {
		margin: 2px 0px 0 2px;
		padding: 1px;		
		display: inline-block;
		vertical-align: middle !important;
	}     
	.ui-autocomplete {
		max-height: 200px;
		overflow-y: auto; 
		/* prevent horizontal scrollbar */
		overflow-x: hidden;
		/* add padding to account for vertical scrollbar */
		padding-right: 20px;
		font-size: 12px; 
		font-family: Arial, Helvetica, sans-serif;
	}
	
	/* these styles are for the combobox dropdown button */
	.ui-button {
		margin-left: 0px;
		
		height: 21px;
	}
	.ui-icon {
		height: 1em;
	}
	.ui-button-icon-only .ui-button-text { padding: 0; } 
	
	.ui-widget-content { 
		background: white;
	}

	.clsWaitRight { 
		background: url("//ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/base/images/ui-anim_basic_16x16.gif") right center no-repeat; 
	}
	
	.clsCombo {	
			
	}
	
	.clsBtnAll {
		top: 2px;
		position:relative;
	}
			
	.panelSearch {
	}
	.panelSearch .detailList .labelCol label {
		display:block;
		width: 150px;
	}

	.panelEdit {
	}
	.panelEdit .detailList .labelCol label {
		display:inline-block;
		width: 150px;
	}

	td.sideLeft {
		width: 30%;
		min-width: 400px;
	}

	.panelSearch .detailList .data2Col {
		position: relative;
	}

	.panelEdit .detailList .data2Col {
		position: relative;
	}	

    .Error { 
    	color: red; 
    	font-weight: strong;
    }
    
    .clsLoading {
		display: none;
		z-index: 99;
		position: fixed;
		top: 40%;
		left: 30%;
		background: lightyellow;
		width: 400px;
		height: 40px;		
	}   
	 
    .clsLoadingPP {
		display: none;
		z-index: 99;
		position: fixed;
		top: 60%;
		left: 30%;
		background: lightyellow;
		width: 400px;
		height: 40px;	
		
		border: 1px solid #CACACA;
		color: #666;
		font-size: 95%;
		padding: 4px;			
	}   

	.clsDTEven {
		background: white;
	}
	
	.clsDTOdd {
		background: AliceBlue;
	}
	
	.clsDTHeader  {
		background: #C0D0E5;
	}
	
	.bPageBlock .detailList th {
		vertical-align: middle;
	}

	.bPageBlock .detailList td {
		vertical-align: middle;
	}

	.bPageBlock .list .clsDTFooter  {
		background: WhiteSmoke;
	}
	
</style>
 
<script type="text/javascript">
    var j$ = jQuery.noConflict();
 	
    var listPurchasers = null; // our cached list of purchasers (contactId, name, bidNum) for the current Auction.
    var auctionId = "{!auctionId}"; // the current Auction.
 	
	/*******************************************************************************************************
	* this function is called when the page loads
	********************************************************************************************************/
	j$(document).ready(function() {
		myInitializeJQueryUI('{!strNamePurchaser}');
	});	
	
	/*******************************************************************************************************
	* the work hours to do all jQueryUI initialization (specifically setting up the autocompletes).
	********************************************************************************************************/
	function myInitializeJQueryUI(strNamePurchaser) {
	
		// eat the enter button, to prevent it from canceling or submitting the form.
		j$(document).keydown(function(event) {
			if (event.which == 13) {
		    	event.preventDefault();
		    	event.stopPropagation();
		    	return false; // does preventDefault and stopPropagation
		  	}  
		});		

		/*******************************************************************************************************
   	 	* setup the Purchasers autocomplete textbox
		*******************************************************************************************************/
		j$(".clsComboPurchasers").autocomplete({
			minLength: 3,
			delay: 200,

		   	// focus called when the user hilights an item by arrowing or mousing over the list 
		   	// we needed to override this, otherwise the Id was displayed in the textbox.
		   	focus: function(event, ui) { 
		   		j$(this).val(ui.item.label);
		   		return false;
		   	},
	   	})
		.data("autocomplete")._renderItem = function(ul, item) {
			return j$( "<li></li>" )
				.data("item.autocomplete", item)
				.append( '<a><b>' + item.label + '</b>' +
					'&nbsp;&nbsp;&nbsp;<i>' + strNull(item.bidderNumber) + '</i></a>' )
				.appendTo( ul );
		};	   	

		/*******************************************************************************************************
		* specify the specific fill function for Purchasers
		* gets all ticket holders and buyers, and filters in the browser, since the list will be small enough.
		*******************************************************************************************************/
		j$("#txtPurchasers").autocomplete("option", "source",
			function(request, response) {		
				// Gets all ticket holders, and filters in the browser, since the list will be small enough.
				// this also allows us to search by bid number which we add to the label.
				if (listPurchasers != null) {
					fillAndMatchPurchasersCombo(listPurchasers, request, response);
				} else 
					{			
	       			j$('#txtPurchasers').addClass('clsWaitRight');	        			
					GW_Auctions.AUC_CTRL_AuctionCheckOut.getListPurchasers(auctionId, '', function(result, event) {
						j$('#txtPurchasers').removeClass('clsWaitRight');	        								
		        		if (event.type == 'exception') {
		        			alert(event.message);
		        		} else {
		        			if (result != null) {
		        				listPurchasers = result;
								fillAndMatchPurchasersCombo(listPurchasers, request, response);
			        		}
		        		}
			   		}, {escape:false});		   		
		   		}
		   	}
		);	
		
		/*******************************************************************************************************
		* given the list of Purchasers, what is being searched for, and the response object,
		* fill in the response with the combo's items that match.
		*******************************************************************************************************/
		function fillAndMatchPurchasersCombo(listP, request, response) {
			var strSearch = request.term.toLowerCase();	
			if (strSearch == '--all--') strSearch = '';	
 			var isMatch = false;
     		response(j$.map(listP, function(item) {
     			var strLower = item.strName.toLowerCase(); 
     			var strBN = item.strBidderNumber;  
     			if (strBN == null || strBN == '') strBN = 'no bid number';		
   				if (strLower.indexOf(strSearch) >= 0 || strBN.indexOf(strSearch) >= 0) {
	   				// if we find the exact match, get its formal text and id.
	   				// ideally, we'd select it, but I couldn't figure out how!
	   				if (strLower == strSearch || strBN == strSearch) {
	   					j$("#txtPurchasers").val(item.strName).data('Id', item.contactId);
	   					isMatch = true;
	   				}	   				
   					return {label: item.strName, value: item.contactId, bidderNumber: item.strBidderNumber };
   				}
   			}));
   			
   			// if we don't find a match for a real search, clear the cached value.
			if (!isMatch ) {
     			j$("#txtPurchasers").data('Id', null);
			}	        														   
   			
		}

		/*******************************************************************************************************
		* specify the select event for Purchasers, so it can cause the opportunities panel to refresh.
		*******************************************************************************************************/
		j$('#txtPurchasers').autocomplete("option", "select",
			function(event, ui) {
				j$(this).val(ui.item.label).data('Id', ui.item.value);
	   			// call the controller to update the Purchasers panel.
	   			ChangePurchaserLookup(ui.item.value);			   		
		   		return false;		   		 
		   	}
		);

		/*******************************************************************************************************
		* specify the Change event for Purchasers, so it can update the controller to refresh the opps panel. 
		* Change called when the field is blurred (loses focus), if the value has changed;
		* ui.item refers to the selected item, if one was selected from the autocomplete menu.
		*******************************************************************************************************/
		j$('#txtPurchasers').autocomplete("option", "change",
			function(event, ui) {
				// if ui.item is provided, we already dealt with it in the select event.
				if (ui.item != null) return false;	
				
				var Id = j$(this).data('Id');
				if (Id == null && j$(this).val() != null) {
					// did the user give enough time for the search to run?
					// better go the search route!
					SearchPurchaserLookup(j$(this).val());
					return false;				
				}
				ChangePurchaserLookup(Id);
				return false;				
		   	}
		);
			
		/*******************************************************************************************************
		* setup the button for showing all items		
		*******************************************************************************************************/
		j$(".clsBtnAll" )
			.attr( "tabIndex", -1 )
			.attr( "title", "Show All Items" )
			.button({
				icons: {
					primary: "ui-icon-triangle-1-s"
				},
				text: false
			})
			.removeClass( "ui-corner-all" )
			.addClass( "ui-corner-right ui-button-icon" )
			.click(function() {
				// find our input textbox to our left
				var input = j$(this).prev('input');
				if (input.autocomplete( "option", "source" ) == null) return;
				// close if already visible
				if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
					input.autocomplete( "close" );
					return;
				}
	
				// work around a bug (likely same cause as #5265)
				j$( this ).blur();
	
				// pass empty as value to search for all
				input.autocomplete( "search", "--all--" );
				input.focus();
			});	
		
	

	    // set Purchaser name
	    j$('#txtPurchasers').val(strNamePurchaser);	
	    	    
	} // end of myInitializeJQueryUI
	
	
	/*******************************************************************************************************
	* utility to deal with strings that might be null.
	*******************************************************************************************************/
	function strNull(str) {
		return (str == null ? '' : str);
	}
		
</script>
 	
   	<apex:sectionHeader title="Auction Check Out" />      
    <apex:form >   		    
        <apex:pageBlock mode="edit" title="Search by Name or Bidder Number" >
	       		<apex:actionStatus id="statusLoad" onstart="j$('.loading').fadeIn();" onstop="j$('.loading').fadeOut();" />
				<div class="loading clsLoading"  >
				  <p style="vertical-align: middle;" >
					<img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
					<span style="vertical-align: middle;" >Loading...</span>
				  </p>
				</div>  
			<table cellpadding="0">
			<tr>
			<td class="sideLeft" style="vertical-align:top;">			
				<apex:outputPanel id="panelSearch" styleClass="panelSearch" >				            
		            <apex:pageBlockSection columns="1"  >
			    		<apex:pageBlockSectionItem >
			    			<apex:outputLabel value="Auction" for="lbxAuctions" />
					    	<apex:selectList value="{!auctionId}" size="1" id="lbxAuctions" >
					    		<apex:actionSupport event="onchange" status="statusLoad" action="{!ChangeAuction}" 
					    			rerender="panelSearch,panelEdit,panelPurchases,panelStatus,panelButtons,panelCreditCard" 
					    			oncomplete="auctionId='{!auctionId}'; listPurchasers=null; myInitializeJQueryUI('{!strNamePurchaser}');" />			    			
					    		<apex:selectOptions value="{!listSOAuctions}" />
					    	</apex:selectList>	
						</apex:pageBlockSectionItem>
		                <apex:pageBlockSectionItem labelStyle="vertical-align:middle;" dataStyle="vertical-align:middle;">
				       		<apex:outputLabel value="Guest" />
			                <apex:outputPanel >
							   	<input type="text" id="txtPurchasers" class="clsCombo clsComboPurchasers ui-autocomplete-input" /> 
							   	<button id="btnAll" class="clsBtnAll ui-button ui-widget ui-state-default ui-button-icon-only ui-corner-right ui-button-icon" type="button" >&nbsp;</button>           
							    <apex:actionFunction action="{!ChangePurchaserLookup}" name="ChangePurchaserLookup" status="statusLoad" 
					    			rerender="panelSearch,panelEdit,panelPurchases,panelStatus,panelButtons,panelCreditCard" 
							    	oncomplete="myInitializeJQueryUI('{!strNamePurchaser}');" >
							        <apex:param name="param1" assignTo="{!contactIdPurchaser}" value="" />
							    </apex:actionFunction>
							    <apex:actionFunction action="{!SearchPurchaserLookup}" name="SearchPurchaserLookup" status="statusLoad" 
					    			rerender="panelSearch,panelEdit,panelPurchases,panelStatus,panelButtons,panelCreditCard" 
							    	oncomplete="myInitializeJQueryUI('{!strNamePurchaser}');" >
							        <apex:param name="param1" assignTo="{!searchPurchaser}" value="" />
							    </apex:actionFunction>
			                </apex:outputPanel>
		                </apex:pageBlockSectionItem>		
					</apex:pageBlockSection>
				</apex:outputPanel>
			</td>
			<td style="veritcal-align:middle" >				
				<apex:outputPanel id="panelStatus" >				            
		            <apex:pageMessage summary="{!strStatus}" severity="info" strength="2" escape="false" rendered="{!strStatus != null}" />  
		            <apex:messages styleClass="Error" />
				</apex:outputPanel>				   				   				            					           
			</td>            
			</tr>
			<tr>
			<td class="sideLeft" style="vertical-align:top;" colspan="2" >
				<apex:outputPanel id="panelPurchases" >
		            <apex:pageBlockSection columns="1"  >
				    	<apex:repeat var="receipt" value="{!listReceipts}">   	    	
							<apex:pageBlockTable value="{!receipt.listOppAuctionPurchases}" var="oppAP" id="tblAP" 

								footerClass="clsDTFooter"	
								rules="rows" 
								columnsWidth="20px, 260px, 220px, 200px, 80px, 70px" >
		
								<apex:column >
								</apex:column>
		
								<apex:column > 
							        <apex:facet name="header">Opportunity</apex:facet>
									<apex:outputLink value="/{!oppAP.opp.Id}" >{!oppAP.opp.Name}</apex:outputLink>
								</apex:column>
								
								<apex:column > 
							        <apex:facet name="header">Item</apex:facet>
									<apex:outputText value="{!IF(oppAP.opp.RecordType.Name=='GW Auction Ticket', 'Auction Tickets', NULLVALUE(oppAP.opp.Auction_Item_Name__c, oppAP.opp.Description))}"/>
								</apex:column>
		
								<apex:column >
							        <apex:facet name="header">{!$ObjectType.Opportunity.Fields.StageName.Label}</apex:facet>
									<apex:outputField value="{!oppAP.opp.StageName}" />
								</apex:column>				
								
								<apex:column >
							        <apex:facet name="header">Amount</apex:facet>
									<apex:outputText value="{0,Number,$#,###.##}" >
										<apex:param value="{!oppAP.opp.Amount}" />
									</apex:outputText>
									<apex:facet name="footer">				
										<apex:outputText value="{0,Number,$#,###.##}" escape="false" style="font-weight:bold;">
											<apex:param value="{!receipt.decTotalAmountPaid}"/> 
										</apex:outputText>								
									</apex:facet>
								</apex:column>
		
								<apex:column >
									<apex:facet name="header" >Pay Now</apex:facet>
									<apex:inputCheckbox value="{!oppAP.IsPayNow}" required="false" immediate="false" >
							    		<apex:actionSupport event="onchange" status="statusLoad" action="{!ChangePayNow}"
							    			rerender="panelPurchases,panelButtons,panelStatus,panelCreditCard" 
							    			oncomplete="myInitializeJQueryUI('{!strNamePurchaser}');" />
							    	</apex:inputCheckbox>
									<Apex:facet name="footer">				
										<apex:outputText value="{0,Number,$#,###.##}" escape="false" style="text-align:center; font-weight:bold;">
											<apex:param value="{!receipt.decTotalAmountToPay}"/> 
										</apex:outputText>								
									</apex:facet>
								</apex:column>	
								 
							</apex:pageBlockTable>
						</apex:repeat>
					</apex:pageBlockSection>
				</apex:outputPanel> 
			      
			    <apex:outputPanel id="panelButtons">     
		            <apex:pageBlockSection columns="2"  >
		                		       
			            <apex:pageBlockSectionItem >
			            	<apex:outputPanel >
								<apex:commandButton value="Charge Credit Card" rendered="{!fHasReceipts && fShowPaymentProcessorOnPage==false}" 
									onclick="if ('{!strCreditCardChargeURL}' == '') {
												alert('Please refer to the Auctions Installation and Configuration Guide to set up a payment processor.');
											} else if ({!decTotalAmountToPay} == 0) {
												alert('Please check which items you want to pay for, before opening the payment processor.');
											} else { 
												window.open('{!strCreditCardChargeURL}','','{!strPaymentProcessorWindowParameters}');
											} 
											return false;" 
								/>&nbsp;&nbsp;							

								<apex:commandButton value="Charge Credit Card" rendered="{!fHasReceipts && fShowPaymentProcessorOnPage}" 
									action="{!ShowPanelCreditCard}" status="statusLoad" rerender="panelCreditCard" 
									onclick="if ('{!strCreditCardChargeURL}' == '') {
												alert('Please refer to the Auctions Installation and Configuration Guide to set up a payment processor.');
												return false;
											} else if ({!decTotalAmountToPay} == 0) {
												alert('Please check which items you want to pay for, before opening the payment processor.');
												return false;
											}"
									oncomplete="myInitializeJQueryUI('{!strNamePurchaser}');" />&nbsp;&nbsp;	
								
								<apex:commandButton value="View Receipt" rendered="{!fHasReceipts}"
									onclick="window.open('{!strOpenReceiptURL}'); return false;" />&nbsp;&nbsp;															
								<apex:commandButton value="Close" action="{!Close}" immediate="true" />&nbsp;&nbsp;							
							</apex:outputPanel>
						</apex:pageBlockSectionItem>
						
			            <apex:pageBlockSectionItem >
		                	<apex:outputPanel rendered="{!fHasReceipts}">
				    			<apex:outputLabel value="Change checked item {!$ObjectType.Opportunity.Fields.StageName.Label}s to" />
							</apex:outputPanel>			            	
		                	<apex:outputPanel rendered="{!fHasReceipts}"> 
		                		<apex:inputField value="{!oppForStage.StageName}" required="false" />
			                    <apex:commandButton value="Update" action="{!UpdateOppStages}" />
						   	</apex:outputPanel>
						</apex:pageBlockSectionItem>
		            
		                <apex:pageBlockSectionItem >
		                </apex:pageBlockSectionItem>

					</apex:pageBlockSection>
				</apex:outputPanel>

				<apex:outputPanel id="panelCreditCard" >
					<apex:outputPanel rendered="{!fShowPanelCreditCard}" >
						<div class="clsLoadingPP"  >
						  <p style="vertical-align: middle; text-align:center;" >
							<img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
							<span style="vertical-align: middle;" >Loading Payment Processor...</span>
						  </p>
						</div>	       				
	       				<iframe id="iframePP" frameborder="0" width="95%" scrolling="auto" height="{!strPaymentProcessorPageHeight}" src="{!strCreditCardChargeURL}" />
	       				<script>
	       					j$('.clsLoadingPP').fadeIn();
	       					j$('#iframePP').load(function(){  
	       						j$('.clsLoadingPP').fadeOut();
	       					});
	       				</script>
					</apex:outputPanel>
				</apex:outputPanel>						
				<p/>
			</td>
			</tr>
			</table> 
        </apex:pageBlock>       
    </apex:form>
</apex:page>